{"version":3,"sources":["Square.js","chalk-board-bg.png","App.js","index.js"],"names":["Square","valueSquare","handleChangeValue","index","positionWin","useState","console","log","className","onClick","style","color","backgroundColor","App","turn","setTurn","undefined","winner","setWinner","Array","fill","squares","setSquares","1","2","3","setPositionWin","ii","newS","calculateWinner","a","b","c","lines","i","length","opacity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f627ab2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Square = ({ valueSquare, handleChangeValue, index, positionWin }) => {\r\n\tconst [value, setValue] = useState('');\r\n\tconsole.log(positionWin, index);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='square'\r\n\t\t\tonClick={() => handleChangeValue(index)}\r\n\t\t\tstyle={{\r\n\t\t\t\tcolor: `${valueSquare === 'X' ? 'lightgreen' : 'red'}`,\r\n\t\t\t\tbackgroundColor: `${\r\n\t\t\t\t\tpositionWin['1'] === index ||\r\n\t\t\t\t\tpositionWin['2'] === index ||\r\n\t\t\t\t\tpositionWin['3'] === index\r\n\t\t\t\t\t\t? 'rgba(255, 255, 255, 0.1)'\r\n\t\t\t\t\t\t: ''\r\n\t\t\t\t}`,\r\n\t\t\t}}>\r\n\t\t\t<span>{valueSquare && valueSquare}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Square;\r\n","export default __webpack_public_path__ + \"static/media/chalk-board-bg.2816330d.png\";","import './App.css';\nimport Square from './Square';\nimport { useState } from 'react';\nimport background from './chalk-board-bg.png';\nfunction App() {\n\tconst [turn, setTurn] = useState('X');\n\tconst [winner, setWinner] = useState(undefined);\n\tconst [squares, setSquares] = useState(Array(9).fill(null));\n\tconst [positionWin, setPositionWin] = useState({\n\t\t1: null,\n\t\t2: null,\n\t\t3: null,\n\t});\n\n\tconst handleChangeValue = ii => {\n\t\tif (!winner) {\n\t\t\tlet newS = squares;\n\t\t\tnewS[ii] = turn;\n\t\t\tsetSquares(newS);\n\t\t\tif (turn === 'X') {\n\t\t\t\tsetTurn('O');\n\t\t\t} else {\n\t\t\t\tsetTurn('X');\n\t\t\t}\n\t\t}\n\t\tconst [a, b, c] = calculateWinner(squares);\n\n\t\tif (a !== null && b !== null && c !== null) {\n\t\t\tsetWinner(squares[a]);\n\t\t\tsetPositionWin({\n\t\t\t\t1: a,\n\t\t\t\t2: b,\n\t\t\t\t3: c,\n\t\t\t});\n\t\t}\n\t};\n\tconst calculateWinner = squares => {\n\t\tconst lines = [\n\t\t\t[0, 1, 2],\n\t\t\t[3, 4, 5],\n\t\t\t[6, 7, 8],\n\t\t\t[0, 3, 6],\n\t\t\t[1, 4, 7],\n\t\t\t[2, 5, 8],\n\t\t\t[0, 4, 8],\n\t\t\t[2, 4, 6],\n\t\t];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst [a, b, c] = lines[i];\n\t\t\tif (\n\t\t\t\tsquares[a] &&\n\t\t\t\tsquares[a] === squares[b] &&\n\t\t\t\tsquares[a] === squares[c]\n\t\t\t) {\n\t\t\t\treturn [a, b, c];\n\t\t\t}\n\t\t}\n\t\treturn [null, null, null];\n\t};\n\n\tconst replayGame = () => {\n\t\tsetWinner(undefined);\n\t\tsetSquares(Array(9).fill(null));\n\t\tsetTurn('X');\n\t\tsetPositionWin({\n\t\t\t1: null,\n\t\t\t2: null,\n\t\t\t3: null,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='game-tic-tac-toe'>\n\t\t\t\t<div className='title-game'>\n\t\t\t\t\t<p> Tic Tac Toe</p>\n\t\t\t\t\t<p>Current turn: {turn}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='main-game'>\n\t\t\t\t\t<div className='first-floor'>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tvalueSquare={squares[0]}\n\t\t\t\t\t\t\tindex={0}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\tvalueSquare={squares[1]}\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tindex={1}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tvalueSquare={squares[2]}\n\t\t\t\t\t\t\tindex={2}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='second-floor'>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tvalueSquare={squares[3]}\n\t\t\t\t\t\t\tindex={3}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\tvalueSquare={squares[4]}\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tindex={4}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\tvalueSquare={squares[5]}\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tindex={5}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='third-floor'>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\tvalueSquare={squares[6]}\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tindex={6}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\tvalueSquare={squares[7]}\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tindex={7}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\tvalueSquare={squares[8]}\n\t\t\t\t\t\t\thandleChangeValue={handleChangeValue}\n\t\t\t\t\t\t\tindex={8}\n\t\t\t\t\t\t\tpositionWin={positionWin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='end-game' style={{ opacity: `${winner ? '1' : '0'}` }}>\n\t\t\t\t\t<p> {winner} WIN !!!</p>\n\t\t\t\t\t<button onClick={replayGame}>Replay ???</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}